{
    "type": [
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\n [1,]    1    0    0    0    0    0    0    0    0     0     0     0\n [2,]    0    1    0    0    0    0    0    0    0     0     0     0\n [3,]    0    0    1    0    0    0    0    0    0     0     0     0\n [4,]    0    0    0    1    0    0    0    0    0     0     0     0\n [5,]    0    0    0    0    1    0    0    0    0     0     0     0\n [6,]    0    0    0    0    0    1    0    0    0     0     0     0\n [7,]    0    0    0    0    0",
        "    0    1    0    0     0     0     0\n [8,]    0    0    0    0    0    0    0    1    0     0     0     0\n [9,]    0    0    0    0    0    0    0    0    1     0     0     0\n[10,]    0    0    0    0    0    0    0    0    0     1     0     0\n[11,]    0    0    0    0    0    0    0    0    0     0     1     0\n[12,]    0    0    0    0    0    0    0    0    0     0     0     1\n",
        "> ",
        "    XC  <- cbind(1, rbind(0, cbind(Xt, Xxt)))",
        "> ",
        "Xc",
        "Error: object 'Xc' not found\n",
        "> ",
        "XC",
        "      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] [,15] [,16]\n [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0     0     0     0\n [2,]    1    1    0    0    1    0    0    0    0     0     0     0     0     0     0     0\n [3,]    1    1    0    0    0    1    0    0    0     0     0     0     0     0     0     0\n [4,]    1    1    0    0    0    0    1    0    0     0     0     0     0     0     0     0\n [5,]    1    1    0    0    0    0    0    1    0",
        "     0     0     0     0     0     0     0\n [6,]    1    0    1    0    0    0    0    0    1     0     0     0     0     0     0     0\n [7,]    1    0    1    0    0    0    0    0    0     1     0     0     0     0     0     0\n [8,]    1    0    1    0    0    0    0    0    0     0     1     0     0     0     0     0\n [9,]    1    0    1    0    0    0    0    0    0     0     0     1     0     0     0     0\n[10,]    1    0    0    1    0    0    0    0    0     0     0     0     1     0     0     0\n[11,]",
        "    1    0    0    1    0    0    0    0    0     0     0     0     0     1     0     0\n[12,]    1    0    0    1    0    0    0    0    0     0     0     0     0     0     1     0\n[13,]    1    0    0    1    0    0    0    0    0     0     0     0     0     0     0     1\n",
        "> ",
        "  colnames(XC) <- c(\"t0\", \"t1\", \"t2\", \"t3\", \"t1x1\", \"t1x2\", \"t1x3\", \"t2x1\", \"t2x2\", \"t2x3\", \"t3x1\", \"t3x2\", \"t3x3\")",
        "Error in dimnames(x) <- dn : \n  length of 'dimnames' [2] not equal to array extent\n",
        "> ",
        "  rownames(XC) <- c(\"t0\", \"t1x0\", \"t1x1\", \"t1x2\", \"t1x3\", \"t2x0\", \"t2x1\", \"t2x2\", \"t2x3\", \"t3x0\", \"t3x1\", \"t3x2\", \"t3x3\")",
        "> ",
        "XC",
        "     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] [,15] [,16]\nt0      1    0    0    0    0    0    0    0    0     0     0     0     0     0     0     0\nt1x0    1    1    0    0    1    0    0    0    0     0     0     0     0     0     0     0\nt1x1    1    1    0    0    0    1    0    0    0     0     0     0     0     0     0     0\nt1x2    1    1    0    0    0    0    1    0    0     0     0     0     0     0     0     0\nt1x3    1    1    0    0    0    0    0    1    0     0",
        "     0     0     0     0     0     0\nt2x0    1    0    1    0    0    0    0    0    1     0     0     0     0     0     0     0\nt2x1    1    0    1    0    0    0    0    0    0     1     0     0     0     0     0     0\nt2x2    1    0    1    0    0    0    0    0    0     0     1     0     0     0     0     0\nt2x3    1    0    1    0    0    0    0    0    0     0     0     1     0     0     0     0\nt3x0    1    0    0    1    0    0    0    0    0     0     0     0     1     0     0     0\nt3x1    1    0    0",
        "    1    0    0    0    0    0     0     0     0     0     1     0     0\nt3x2    1    0    0    1    0    0    0    0    0     0     0     0     0     0     1     0\nt3x3    1    0    0    1    0    0    0    0    0     0     0     0     0     0     0     1\n",
        "> ",
        "kronecker(diag(1, 3), eigen(diag(1, 4) - 1/4)$vectors[, 1:3])",
        "            [,1]       [,2]       [,3]       [,4]       [,5]       [,6]       [,7]       [,8]       [,9]\n [1,]  0.0000000  0.8660254  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000\n [2,] -0.2677175 -0.2886751  0.7713586  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000\n [3,] -0.5341574 -0.2886751 -0.6175294  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000\n [4,]  0.8018748 -0.2886751 -0.1538291  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000",
        "  0.0000000\n [5,]  0.0000000  0.0000000  0.0000000  0.0000000  0.8660254  0.0000000  0.0000000  0.0000000  0.0000000\n [6,]  0.0000000  0.0000000  0.0000000 -0.2677175 -0.2886751  0.7713586  0.0000000  0.0000000  0.0000000\n [7,]  0.0000000  0.0000000  0.0000000 -0.5341574 -0.2886751 -0.6175294  0.0000000  0.0000000  0.0000000\n [8,]  0.0000000  0.0000000  0.0000000  0.8018748 -0.2886751 -0.1538291  0.0000000  0.0000000  0.0000000\n [9,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000",
        "  0.8660254  0.0000000\n[10,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 -0.2677175 -0.2886751  0.7713586\n[11,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 -0.5341574 -0.2886751 -0.6175294\n[12,]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.8018748 -0.2886751 -0.1538291\n",
        "> ",
        "eigen(diag(1, 4) - 1/4)$vectors[, 1:3]",
        "           [,1]       [,2]       [,3]\n[1,]  0.0000000  0.8660254  0.0000000\n[2,] -0.2677175 -0.2886751  0.7713586\n[3,] -0.5341574 -0.2886751 -0.6175294\n[4,]  0.8018748 -0.2886751 -0.1538291\n",
        "> ",
        "contr.treatment(4)",
        "  2 3 4\n1 0 0 0\n2 1 0 0\n3 0 1 0\n4 0 0 1\n",
        "> ",
        "make_design <- function(zero_sum = FALSE) {",
        "+ ",
        "  Xt  <- kronecker(diag(1, 3), rep(1, 4))",
        "+ ",
        "  Xxt <- diag(1, 12)",
        "+ ",
        "  # Constrain to be equal at baseline and sum to zero at each post-randomisation time point",
        "+ ",
        "  if(zero_sum) {",
        "+ ",
        "    C <- eigen(diag(1, 4) - 1/4)$vectors[, 1:3]",
        "+ ",
        "  } else {",
        "+ ",
        "    C <- contr.treatment(4)",
        "+ ",
        "  }",
        "+ ",
        "  XC  <- cbind(1, rbind(0, cbind(Xt, kronecker(diag(1, 3), C))))",
        "+ ",
        "  colnames(XC) <- c(\"t0\", \"t1\", \"t2\", \"t3\", \"t1x1\", \"t1x2\", \"t1x3\", \"t2x1\", \"t2x2\", \"t2x3\", \"t3x1\", \"t3x2\", \"t3x3\")",
        "+ ",
        "  rownames(XC) <- c(\"t0\", \"t1x0\", \"t1x1\", \"t1x2\", \"t1x3\", \"t2x0\", \"t2x1\", \"t2x2\", \"t2x3\", \"t3x0\", \"t3x1\", \"t3x2\", \"t3x3\")",
        "+ ",
        "  return(XC)",
        "+ ",
        "}",
        "> ",
        "make_design()",
        "     t0 t1 t2 t3 t1x1 t1x2 t1x3 t2x1 t2x2 t2x3 t3x1 t3x2 t3x3\nt0    1  0  0  0    0    0    0    0    0    0    0    0    0\nt1x0  1  1  0  0    0    0    0    0    0    0    0    0    0\nt1x1  1  1  0  0    1    0    0    0    0    0    0    0    0\nt1x2  1  1  0  0    0    1    0    0    0    0    0    0    0\nt1x3  1  1  0  0    0    0    1    0    0    0    0    0    0\nt2x0  1  0  1  0    0    0    0    0    0    0    0    0    0\nt2x1  1  0  1  0    0    0    0    1    0    0    0    0    0\nt2x2  1  0  1  0",
        "    0    0    0    0    1    0    0    0    0\nt2x3  1  0  1  0    0    0    0    0    0    1    0    0    0\nt3x0  1  0  0  1    0    0    0    0    0    0    0    0    0\nt3x1  1  0  0  1    0    0    0    0    0    0    1    0    0\nt3x2  1  0  0  1    0    0    0    0    0    0    0    1    0\nt3x3  1  0  0  1    0    0    0    0    0    0    0    0    1\n",
        "> ",
        "make_design(T)",
        "     t0 t1 t2 t3       t1x1       t1x2       t1x3       t2x1       t2x2       t2x3       t3x1       t3x2       t3x3\nt0    1  0  0  0  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000\nt1x0  1  1  0  0  0.0000000  0.8660254  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000\nt1x1  1  1  0  0 -0.2677175 -0.2886751  0.7713586  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000\nt1x2  1  1  0  0 -0.5341574 -0.2886751 -0.6175294",
        "  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000\nt1x3  1  1  0  0  0.8018748 -0.2886751 -0.1538291  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000\nt2x0  1  0  1  0  0.0000000  0.0000000  0.0000000  0.0000000  0.8660254  0.0000000  0.0000000  0.0000000  0.0000000\nt2x1  1  0  1  0  0.0000000  0.0000000  0.0000000 -0.2677175 -0.2886751  0.7713586  0.0000000  0.0000000  0.0000000\nt2x2  1  0  1  0  0.0000000  0.0000000  0.0000000 -0.5341574 -0.2886751 -0.6175294  0.0000000  0.0000000",
        "  0.0000000\nt2x3  1  0  1  0  0.0000000  0.0000000  0.0000000  0.8018748 -0.2886751 -0.1538291  0.0000000  0.0000000  0.0000000\nt3x0  1  0  0  1  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.8660254  0.0000000\nt3x1  1  0  0  1  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 -0.2677175 -0.2886751  0.7713586\nt3x2  1  0  0  1  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000 -0.5341574 -0.2886751 -0.6175294\nt3x3  1  0  0  1  0.0000000  0.0000000",
        "  0.0000000  0.0000000  0.0000000  0.0000000  0.8018748 -0.2886751 -0.1538291\n",
        "> ",
        "make_design()",
        "     t0 t1 t2 t3 t1x1 t1x2 t1x3 t2x1 t2x2 t2x3 t3x1 t3x2 t3x3\nt0    1  0  0  0    0    0    0    0    0    0    0    0    0\nt1x0  1  1  0  0    0    0    0    0    0    0    0    0    0\nt1x1  1  1  0  0    1    0    0    0    0    0    0    0    0\nt1x2  1  1  0  0    0    1    0    0    0    0    0    0    0\nt1x3  1  1  0  0    0    0    1    0    0    0    0    0    0\nt2x0  1  0  1  0    0    0    0    0    0    0    0    0    0\nt2x1  1  0  1  0    0    0    0    1    0    0    0    0    0\nt2x2  1  0  1  0",
        "    0    0    0    0    1    0    0    0    0\nt2x3  1  0  1  0    0    0    0    0    0    1    0    0    0\nt3x0  1  0  0  1    0    0    0    0    0    0    0    0    0\nt3x1  1  0  0  1    0    0    0    0    0    0    1    0    0\nt3x2  1  0  0  1    0    0    0    0    0    0    0    1    0\nt3x3  1  0  0  1    0    0    0    0    0    0    0    0    1\n",
        "> ",
        "p <- rep(0.25,4)",
        "> ",
        "  x <- sample.int(length(p), 1, prob = p)",
        "> ",
        "x",
        "[1] 2\n",
        "> ",
        "X",
        "   (Intercept) t1 t2 t3 t0:x1 t1:x1 t2:x1 t3:x1 t0:x2 t1:x2 t2:x2 t3:x2 t0:x3 t1:x3 t2:x3 t3:x3\n1            1  0  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n2            1  1  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n3            1  1  0  0     0     1     0     0     0     0     0     0     0     0     0     0\n4            1  1  0  0     0     0     0     0     0     1     0     0     0     0     0     0\n5            1  1  0  0     0     0",
        "     0     0     0     0     0     0     0     1     0     0\n6            1  0  1  0     0     0     0     0     0     0     0     0     0     0     0     0\n7            1  0  1  0     0     0     1     0     0     0     0     0     0     0     0     0\n8            1  0  1  0     0     0     0     0     0     0     1     0     0     0     0     0\n9            1  0  1  0     0     0     0     0     0     0     0     0     0     0     1     0\n10           1  0  0  1     0     0     0     0     0     0     0     0",
        "     0     0     0     0\n11           1  0  0  1     0     0     0     1     0     0     0     0     0     0     0     0\n12           1  0  0  1     0     0     0     0     0     0     0     1     0     0     0     0\n13           1  0  0  1     0     0     0     0     0     0     0     0     0     0     0     1\nattr(,\"assign\")\n [1] 0 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2\nattr(,\"contrasts\")\nattr(,\"contrasts\")$t\n[1] \"contr.treatment\"\n\nattr(,\"contrasts\")$x\n[1] \"contr.treatment\"\n\n",
        "> ",
        "rownames(X)",
        " [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\"\n",
        "> ",
        "X <- make_design()",
        "> ",
        "X",
        "     t0 t1 t2 t3 t1x1 t1x2 t1x3 t2x1 t2x2 t2x3 t3x1 t3x2 t3x3\nt0    1  0  0  0    0    0    0    0    0    0    0    0    0\nt1x0  1  1  0  0    0    0    0    0    0    0    0    0    0\nt1x1  1  1  0  0    1    0    0    0    0    0    0    0    0\nt1x2  1  1  0  0    0    1    0    0    0    0    0    0    0\nt1x3  1  1  0  0    0    0    1    0    0    0    0    0    0\nt2x0  1  0  1  0    0    0    0    0    0    0    0    0    0\nt2x1  1  0  1  0    0    0    0    1    0    0    0    0    0\nt2x2  1  0  1  0",
        "    0    0    0    0    1    0    0    0    0\nt2x3  1  0  1  0    0    0    0    0    0    1    0    0    0\nt3x0  1  0  0  1    0    0    0    0    0    0    0    0    0\nt3x1  1  0  0  1    0    0    0    0    0    0    1    0    0\nt3x2  1  0  0  1    0    0    0    0    0    0    0    1    0\nt3x3  1  0  0  1    0    0    0    0    0    0    0    0    1\n",
        "> ",
        "rownames(X)",
        " [1] \"t0\"   \"t1x0\" \"t1x1\" \"t1x2\" \"t1x3\" \"t2x0\" \"t2x1\" \"t2x2\" \"t2x3\" \"t3x0\" \"t3x1\" \"t3x2\" \"t3x3\"\n",
        "> ",
        "grepl(paste0(\"x\", x), rownames(X))",
        " [1] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE\n",
        "> ",
        "c(TRUE, grepl(paste0(\"x\", x), rownames(X))[-1])",
        " [1]  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE\n",
        "> ",
        "X[c(TRUE, grepl(paste0(\"x\", x), rownames(X))[-1]), ]",
        "     t0 t1 t2 t3 t1x1 t1x2 t1x3 t2x1 t2x2 t2x3 t3x1 t3x2 t3x3\nt0    1  0  0  0    0    0    0    0    0    0    0    0    0\nt1x2  1  1  0  0    0    1    0    0    0    0    0    0    0\nt2x2  1  0  1  0    0    0    0    0    1    0    0    0    0\nt3x2  1  0  0  1    0    0    0    0    0    0    0    1    0\n",
        "> ",
        "  X_j <- X[c(TRUE, grepl(paste0(\"x\", x), rownames(X))[-1]), ]",
        "> ",
        "X_j",
        "     t0 t1 t2 t3 t1x1 t1x2 t1x3 t2x1 t2x2 t2x3 t3x1 t3x2 t3x3\nt0    1  0  0  0    0    0    0    0    0    0    0    0    0\nt1x2  1  1  0  0    0    1    0    0    0    0    0    0    0\nt2x2  1  0  1  0    0    0    0    0    1    0    0    0    0\nt3x2  1  0  0  1    0    0    0    0    0    0    0    1    0\n",
        "> ",
        "sim_subject_data <- function(X, p, beta, sigma_e, sigma_u) {",
        "+ ",
        "  x <- sample.int(length(p), 1, prob = p)",
        "+ ",
        "  X_j <- X[c(TRUE, grepl(paste0(\"x\", x), rownames(X))[-1]), ]",
        "+ ",
        "  b_j <- rnorm(1, 0, sigma_u)",
        "+ ",
        "  y_j <- b_j + X_j %*% beta + rnorm(nrow(X_j), 0, sigma_e)",
        "+ ",
        "  data.table(x = x, b = b_j, y = y_j)",
        "+ ",
        "}",
        "> ",
        "sim_subject_data(X, rep(0.25, 4), rep(0, 13), 3, 1)",
        "Error in rnorm(nrow(X_j), 0, sigma_e) : invalid arguments\n",
        "> ",
        "  x <- sample.int(length(p), 1, prob = p)",
        "> ",
        "  X_j <- X[c(TRUE, grepl(paste0(\"x\", x), rownames(X))[-1]), ]",
        "> ",
        "sigma_u <- 1",
        "> ",
        "  b_j <- rnorm(1, 0, sigma_u)",
        "> ",
        "rnorm(nrow(X_j), 0, sigma_e)",
        "Error in rnorm(nrow(X_j), 0, sigma_e) : object 'sigma_e' not found\n",
        "> ",
        "sigma_e <- 3",
        "> ",
        "rnorm(nrow(X_j), 0, sigma_e)",
        "[1]  0.09499085  4.93317880 -2.56934681  0.20870847\n",
        "> ",
        "X_j %*% beta",
        "Error in X_j %*% beta : requires numeric/complex matrix/vector arguments\n",
        "> ",
        "beta <- rep(0, 13)",
        "> ",
        "X_j %*% beta",
        "     [,1]\nt0      0\nt1x3    0\nt2x3    0\nt3x3    0\n",
        "> ",
        "  y_j <- b_j + drop(X_j %*% beta) + rnorm(nrow(X_j), 0, sigma_e)",
        "> ",
        "  data.table(x = x, b = b_j, y = y_j)",
        "Error in data.table(x = x, b = b_j, y = y_j) : \n  could not find function \"data.table\"\n",
        "> ",
        "sim_subject_data <- function(X, p, beta, sigma_e, sigma_u) {",
        "+ ",
        "  x <- sample.int(length(p), 1, prob = p)",
        "+ ",
        "  X_j <- X[c(TRUE, grepl(paste0(\"x\", x), rownames(X))[-1]), ]",
        "+ ",
        "  b_j <- rnorm(1, 0, sigma_u)",
        "+ ",
        "  y_j <- b_j + drop(X_j %*% beta) + rnorm(nrow(X_j), 0, sigma_e)",
        "+ ",
        "  data.table::data.table(x = x, b = b_j, y = y_j)",
        "+ ",
        "}",
        "> ",
        "sim_subject_data(X, rep(0.25, 4), rep(0, 13), 3, 1)",
        "   x          b        y\n1: 3 -0.1800003 6.857785\n2: 3 -0.1800003 2.677594\n3: 3 -0.1800003 2.684580\n4: 3 -0.1800003 2.391511\n",
        "> ",
        "sim_subject_data(X, rep(0.25, 4), rep(0, 13), 3, 1)",
        "   x            b          y\n1: 3 -0.004781608 -3.7778046\n2: 3 -0.004781608  0.2436832\n3: 3 -0.004781608  4.0372458\n4: 3 -0.004781608 -0.1402991\n",
        "> ",
        "sim_subject_data(X, rep(0.25, 4), rep(0, 13), 3, 1)",
        "Error in rnorm(nrow(X_j), 0, sigma_e) : invalid arguments\n",
        "> ",
        "sim_subject_data <- function(X, p, beta, sigma_e, sigma_u) {",
        "+ ",
        "  x <- sample.int(length(p), 1, prob = p) - 1",
        "+ ",
        "  X_j <- X[c(TRUE, grepl(paste0(\"x\", x), rownames(X))[-1]), ]",
        "+ ",
        "  b_j <- rnorm(1, 0, sigma_u)",
        "+ ",
        "  y_j <- b_j + drop(X_j %*% beta) + rnorm(nrow(X_j), 0, sigma_e)",
        "+ ",
        "  data.table::data.table(x = x, b = b_j, y = y_j)",
        "+ ",
        "}",
        "> ",
        "sim_subject_data(X, rep(0.25, 4), rep(0, 13), 3, 1)",
        "   x         b          y\n1: 2 0.2715937  4.9187285\n2: 2 0.2715937 -0.8026874\n3: 2 0.2715937 -3.2317117\n4: 2 0.2715937  1.7056124\n",
        "> ",
        "sim_subject_data(X, rep(0.25, 4), rep(0, 13), 3, 1)",
        "   x        b        y\n1: 3 2.037051 3.674088\n2: 3 2.037051 2.026583\n3: 3 2.037051 2.982371\n4: 3 2.037051 5.060262\n",
        "> ",
        "sim_subject_data(X, rep(0.25, 4), rep(0, 13), 3, 1)",
        "   x        b             y\n1: 0 1.358759  0.0002095397\n2: 0 1.358759 -4.0525938730\n3: 0 1.358759  0.4150143160\n4: 0 1.358759  2.7657498012\n",
        "> ",
        "sim_subject_data(X, rep(0.25, 4), rep(0, 13), 3, 1)",
        "   x         b        y\n1: 3 0.2677715 1.089567\n2: 3 0.2677715 2.792584\n3: 3 0.2677715 2.173803\n4: 3 0.2677715 3.918244\n",
        "> ",
        "system.time(",
        "+ ",
        "fit_vb <- vb_lmm_randint(",
        "+ ",
        "  model.matrix( ~ t + t:x, data = ex)[, -c(5, 9, 13)],",
        "+ ",
        "  model.matrix( ~ 0 + factor(id), data = ex)[,],",
        "+ ",
        "  ex[, s1],",
        "+ ",
        "  mu_beta = rep(0, 13),",
        "+ ",
        "  sigma_beta = diag(c(10^2, rep(1, 12))),",
        "+ ",
        "  mu = rep(0, N + 13),",
        "+ ",
        "  sigma = diag(1, N + 13),",
        "+ ",
        "  Aeps = 1e-2, Beps = 1e-2, Au = 1e-2, Bu = 1e-2",
        "+ ",
        ")",
        "+ ",
        ")",
        "   user  system elapsed \n  0.093   0.000   0.093 \n",
        "> ",
        "system.time(",
        "+ ",
        "fit_vb <- vb_lmm_randint(",
        "+ ",
        "  model.matrix( ~ t + t:x, data = ex)[, -c(5, 9, 13)],",
        "+ ",
        "  model.matrix( ~ 0 + factor(id), data = ex)[,],",
        "+ ",
        "  ex[, s1],",
        "+ ",
        "  mu_beta = rep(0, 13),",
        "+ ",
        "  sigma_beta = diag(c(10^2, rep(1, 12))),",
        "+ ",
        "  mu = rep(0, N + 13),",
        "+ ",
        "  sigma = diag(1, N + 13),",
        "+ ",
        "  Aeps = 1e-2, Beps = 1e-2, Au = 1e-2, Bu = 1e-2",
        "+ ",
        ")",
        "+ ",
        ")",
        "   user  system elapsed \n  0.089   0.000   0.089 \n",
        "> ",
        "0.1*5",
        "[1] 0.5\n",
        "> ",
        "0.1*5*1e4/60",
        "[1] 83.33333\n",
        "> ",
        "0.1*5*1e3/60",
        "[1] 8.333333\n",
        "> ",
        "fit_vb",
        "$converged\n[1] FALSE\n\n$elbo\n  [1] -1451.973 -1079.444 -1075.572 -1074.510 -1073.933 -1073.568 -1073.320 -1073.145 -1073.016 -1072.920 -1072.846 -1072.787 -1072.741 -1072.703 -1072.673\n [16] -1072.648 -1072.627 -1072.610 -1072.595 -1072.582 -1072.572 -1072.563 -1072.555 -1072.548 -1072.542 -1072.537 -1072.533 -1072.529 -1072.526 -1072.523\n [31] -1072.520 -1072.518 -1072.516 -1072.514 -1072.512 -1072.511 -1072.509 -1072.508 -1072.507 -1072.506 -1072.506 -1072.505 -1072.504 -1072.504 -1072.503\n [46] -1072.503 -1072.502",
        " -1072.502 -1072.501 -1072.501 -1072.501 -1072.501 -1072.500 -1072.500 -1072.500 -1072.500 -1072.500 -1072.499 -1072.499 -1072.499\n [61] -1072.499 -1072.499 -1072.499 -1072.499 -1072.499 -1072.499 -1072.499 -1072.499 -1072.499 -1072.499 -1072.499 -1072.498 -1072.498 -1072.498 -1072.498\n [76] -1072.498 -1072.498 -1072.498 -1072.498 -1072.498 -1072.498 -1072.498 -1072.498 -1072.498 -1072.498 -1072.498 -1072.498 -1072.498 -1072.498 -1072.498\n [91] -1072.498 -1072.498 -1072.498 -1072.498 -1072.498 -1072.498 -1072.498",
        " -1072.498 -1072.498 -1072.498\n\n$mu\n              [,1]\n  [1,]  0.58887496\n  [2,]  1.12578109\n  [3,]  2.65630434\n  [4,]  4.43192036\n  [5,] -2.39363286\n  [6,] -0.97029684\n  [7,] -2.00680521\n  [8,]  2.75624350\n  [9,]  2.84600997\n [10,]  3.70360401\n [11,]  0.62802051\n [12,]  0.28855041\n [13,]  0.48401605\n [14,]  0.63736773\n [15,] -0.37674606\n [16,]  0.42637555\n [17,] -0.07576805\n [18,] -0.23434601\n [19,] -0.16638264\n [20,]  0.02413564\n [21,] -0.19352184\n [22,]  0.34544922\n [23,]  0.38931557\n [24,] -0.38087206\n [25,]",
        " -0.04478763\n [26,]  0.20302250\n [27,] -0.19823814\n [28,]  0.46939001\n [29,]  0.44886078\n [30,]  0.33172624\n [31,]  0.31448884\n [32,] -0.64434361\n [33,]  0.20778699\n [34,] -0.03871403\n [35,] -0.05611549\n [36,] -0.75064060\n [37,]  0.26589459\n [38,] -0.03994306\n [39,] -0.48942664\n [40,]  0.39774494\n [41,] -0.15032132\n [42,] -0.20644973\n [43,]  0.87183047\n [44,] -0.83302678\n [45,]  0.67147315\n [46,]  0.29278680\n [47,]  0.22849544\n [48,]  0.34312714\n [49,]  0.59667590\n [50,] -1.01599535\n [51,]  0.07810028\n [52,]",
        " -0.42754582\n [53,]  0.58824640\n [54,] -0.14505696\n [55,] -0.13679850\n [56,]  0.37823929\n [57,]  0.37261795\n [58,] -0.44146196\n [59,]  0.18940693\n [60,]  0.24905587\n [61,] -0.20936816\n [62,] -0.15181099\n [63,] -0.16645559\n [64,]  0.51252397\n [65,] -0.16234820\n [66,]  0.29005424\n [67,] -0.07345990\n [68,] -0.35046374\n [69,]  0.15634407\n [70,] -0.21934575\n [71,] -0.31629748\n [72,] -0.29158695\n [73,] -0.09327500\n [74,]  1.02201138\n [75,] -0.58521524\n [76,]  0.06987146\n [77,]  0.74505752\n [78,] -0.29584556\n [79,]",
        "  0.06434877\n [80,]  0.01065814\n [81,]  0.16602508\n [82,] -0.33536256\n [83,] -0.24070555\n [84,]  0.20489915\n [85,] -0.19209937\n [86,]  0.12098164\n [87,]  0.15189716\n [88,]  0.08614017\n [89,] -0.44827732\n [90,]  0.15602501\n [91,]  0.79863428\n [92,]  0.23385804\n [93,]  0.08371873\n [94,] -0.58612200\n [95,]  0.02937971\n [96,] -0.68960601\n [97,] -1.11666322\n [98,] -0.37424087\n [99,]  0.03192610\n[100,]  0.09849146\n[101,] -0.11257134\n[102,]  0.17100968\n[103,] -0.14414523\n[104,]  0.24075223\n[105,] -0.49764024\n[106,]",
        " -0.64128495\n[107,] -0.34023088\n[108,]  0.32077438\n[109,] -0.54928450\n[110,]  0.82947573\n[111,] -0.08444113\n[112,]  0.18388500\n[113,]  0.21845876\n\n$sigma\n               [,1]         [,2]         [,3]         [,4]         [,5]         [,6]         [,7]         [,8]         [,9]        [,10]        [,11]\n  [1,]  0.080267312 -0.058597212 -0.058597212 -0.058597212 -0.011113170 -0.011113170 -0.011113170 -0.011462432 -0.011462432 -0.011462432 -0.011352004\n  [2,] -0.058597212  0.242055671  0.049077216  0.049077216",
        " -0.137582875  0.006225685  0.006225685 -0.141489164  0.006212529  0.006212529 -0.140256463\n  [3,] -0.058597212  0.049077216  0.242055671  0.049077216  0.006225685 -0.137582875  0.006225685  0.006212529 -0.141489164  0.006212529  0.006217875\n  [4,] -0.058597212  0.049077216  0.049077216  0.242055671  0.006225685  0.006225685 -0.137582875  0.006212529  0.006212529 -0.141489164  0.006217875\n  [5,] -0.011113170 -0.137582875  0.006225685  0.006225685  0.376176167  0.014214532  0.014214532  0.111218524  0.001150446",
        "  0.001150446  0.110244224\n  [6,] -0.011113170  0.006225685 -0.137582875  0.006225685  0.014214532  0.376176167  0.014214532  0.001150446  0.111218524  0.001150446  0.001090777\n  [7,] -0.011113170  0.006225685  0.006225685 -0.137582875  0.014214532  0.014214532  0.376176167  0.001150446  0.001150446  0.111218524  0.001090777\n  [8,] -0.011462432 -0.141489164  0.006212529  0.006212529  0.111218524  0.001150446  0.001150446  0.361599401  0.013930784  0.013930784  0.113391962\n              [,12]        [,13]        [,14]",
        "         [,15]         [,16]         [,17]         [,18]         [,19]         [,20]         [,21]         [,22]\n  [1,] -0.011352004 -0.011352004 -0.008769759 -0.0067572024 -0.0067572024 -0.0067139505 -0.0067572024 -0.0067139505 -0.0066939523 -0.0066939523 -0.0066939523\n  [2,]  0.006217875  0.006217875 -0.006387956  0.0011656733  0.0011656733  0.0013280088  0.0011656733  0.0013280088  0.0014030670  0.0014030670  0.0014030670\n  [3,] -0.140256463  0.006217875 -0.006387956  0.0011656733  0.0011656733  0.0013280088",
        "  0.0011656733  0.0013280088  0.0014030670  0.0014030670  0.0014030670\n  [4,]  0.006217875 -0.140256463 -0.006387956  0.0011656733  0.0011656733  0.0013280088  0.0011656733  0.0013280088  0.0014030670  0.0014030670  0.0014030670\n  [5,]  0.001090777  0.001090777  0.010237038 -0.0141871690 -0.0141871690  0.0034503972 -0.0141871690  0.0034503972  0.0033843792  0.0033843792  0.0033843792\n  [6,]  0.110244224  0.001090777  0.010237038 -0.0141871690 -0.0141871690  0.0034503972 -0.0141871690  0.0034503972  0.0033843792",
        "  0.0033843792  0.0033843792\n  [7,]  0.001090777  0.110244224  0.010237038 -0.0141871690 -0.0141871690  0.0034503972 -0.0141871690  0.0034503972  0.0033843792  0.0033843792  0.0033843792\n  [8,]  0.001283553  0.001283553  0.010558766  0.0037061064  0.0037061064  0.0035588355  0.0037061064  0.0035588355 -0.0129512506 -0.0129512506 -0.0129512506\n               [,23]         [,24]        [,25]         [,26]         [,27]         [,28]         [,29]         [,30]         [,31]         [,32]\n  [1,] -0.0067139505 -0.0067572024",
        " -0.008769759 -0.0067139505 -0.0067572024 -0.0067572024 -0.0066939523 -0.0066939523 -0.0066939523 -0.0066939523\n  [2,]  0.0013280088  0.0011656733 -0.006387956  0.0013280088  0.0011656733  0.0011656733  0.0014030670  0.0014030670  0.0014030670  0.0014030670\n  [3,]  0.0013280088  0.0011656733 -0.006387956  0.0013280088  0.0011656733  0.0011656733  0.0014030670  0.0014030670  0.0014030670  0.0014030670\n  [4,]  0.0013280088  0.0011656733 -0.006387956  0.0013280088  0.0011656733  0.0011656733  0.0014030670  0.0014030670",
        "  0.0014030670  0.0014030670\n  [5,]  0.0034503972 -0.0141871690  0.010237038  0.0034503972 -0.0141871690 -0.0141871690  0.0033843792  0.0033843792  0.0033843792  0.0033843792\n  [6,]  0.0034503972 -0.0141871690  0.010237038  0.0034503972 -0.0141871690 -0.0141871690  0.0033843792  0.0033843792  0.0033843792  0.0033843792\n  [7,]  0.0034503972 -0.0141871690  0.010237038  0.0034503972 -0.0141871690 -0.0141871690  0.0033843792  0.0033843792  0.0033843792  0.0033843792\n  [8,]  0.0035588355  0.0037061064  0.010558766",
        "  0.0035588355  0.0037061064  0.0037061064 -0.0129512506 -0.0129512506 -0.0129512506 -0.0129512506\n               [,33]         [,34]         [,35]         [,36]         [,37]         [,38]         [,39]         [,40]         [,41]         [,42]\n  [1,] -0.0066939523 -0.0067139505 -0.0067572024 -0.0067572024 -0.0066939523 -0.0067572024 -0.0066939523 -0.0067139505 -0.0067572024 -0.0066939523\n  [2,]  0.0014030670  0.0013280088  0.0011656733  0.0011656733  0.0014030670  0.0011656733  0.0014030670  0.0013280088  0.0011656733",
        "  0.0014030670\n  [3,]  0.0014030670  0.0013280088  0.0011656733  0.0011656733  0.0014030670  0.0011656733  0.0014030670  0.0013280088  0.0011656733  0.0014030670\n  [4,]  0.0014030670  0.0013280088  0.0011656733  0.0011656733  0.0014030670  0.0011656733  0.0014030670  0.0013280088  0.0011656733  0.0014030670\n  [5,]  0.0033843792  0.0034503972 -0.0141871690 -0.0141871690  0.0033843792 -0.0141871690  0.0033843792  0.0034503972 -0.0141871690  0.0033843792\n  [6,]  0.0033843792  0.0034503972 -0.0141871690 -0.0141871690",
        "  0.0033843792 -0.0141871690  0.0033843792  0.0034503972 -0.0141871690  0.0033843792\n  [7,]  0.0033843792  0.0034503972 -0.0141871690 -0.0141871690  0.0033843792 -0.0141871690  0.0033843792  0.0034503972 -0.0141871690  0.0033843792\n  [8,] -0.0129512506  0.0035588355  0.0037061064  0.0037061064 -0.0129512506  0.0037061064 -0.0129512506  0.0035588355  0.0037061064 -0.0129512506\n               [,43]         [,44]         [,45]        [,46]         [,47]         [,48]        [,49]         [,50]         [,51]         [,52]",
        "         [,53]\n  [1,] -0.0066939523 -0.0066939523 -0.0067139505 -0.008769759 -0.0067139505 -0.0066939523 -0.008769759 -0.0067139505 -0.0066939523 -0.0067139505 -0.0067139505\n  [2,]  0.0014030670  0.0014030670  0.0013280088 -0.006387956  0.0013280088  0.0014030670 -0.006387956  0.0013280088  0.0014030670  0.0013280088  0.0013280088\n  [3,]  0.0014030670  0.0014030670  0.0013280088 -0.006387956  0.0013280088  0.0014030670 -0.006387956  0.0013280088  0.0014030670  0.0013280088  0.0013280088\n  [4,]  0.0014030670",
        "  0.0014030670  0.0013280088 -0.006387956  0.0013280088  0.0014030670 -0.006387956  0.0013280088  0.0014030670  0.0013280088  0.0013280088\n  [5,]  0.0033843792  0.0033843792  0.0034503972  0.010237038  0.0034503972  0.0033843792  0.010237038  0.0034503972  0.0033843792  0.0034503972  0.0034503972\n  [6,]  0.0033843792  0.0033843792  0.0034503972  0.010237038  0.0034503972  0.0033843792  0.010237038  0.0034503972  0.0033843792  0.0034503972  0.0034503972\n  [7,]  0.0033843792  0.0033843792  0.0034503972  0.010237038",
        "  0.0034503972  0.0033843792  0.010237038  0.0034503972  0.0033843792  0.0034503972  0.0034503972\n  [8,] -0.0129512506 -0.0129512506  0.0035588355  0.010558766  0.0035588355 -0.0129512506  0.010558766  0.0035588355 -0.0129512506  0.0035588355  0.0035588355\n              [,54]        [,55]         [,56]         [,57]         [,58]         [,59]         [,60]         [,61]         [,62]        [,63]         [,64]\n  [1,] -0.008769759 -0.008769759 -0.0067139505 -0.0066939523 -0.0067572024 -0.0067572024 -0.0067139505",
        " -0.0067139505 -0.0067139505 -0.008769759 -0.0067572024\n  [2,] -0.006387956 -0.006387956  0.0013280088  0.0014030670  0.0011656733  0.0011656733  0.0013280088  0.0013280088  0.0013280088 -0.006387956  0.0011656733\n  [3,] -0.006387956 -0.006387956  0.0013280088  0.0014030670  0.0011656733  0.0011656733  0.0013280088  0.0013280088  0.0013280088 -0.006387956  0.0011656733\n  [4,] -0.006387956 -0.006387956  0.0013280088  0.0014030670  0.0011656733  0.0011656733  0.0013280088  0.0013280088  0.0013280088 -0.006387956",
        "  0.0011656733\n  [5,]  0.010237038  0.010237038  0.0034503972  0.0033843792 -0.0141871690 -0.0141871690  0.0034503972  0.0034503972  0.0034503972  0.010237038 -0.0141871690\n  [6,]  0.010237038  0.010237038  0.0034503972  0.0033843792 -0.0141871690 -0.0141871690  0.0034503972  0.0034503972  0.0034503972  0.010237038 -0.0141871690\n  [7,]  0.010237038  0.010237038  0.0034503972  0.0033843792 -0.0141871690 -0.0141871690  0.0034503972  0.0034503972  0.0034503972  0.010237038 -0.0141871690\n  [8,]  0.010558766  0.010558766",
        "  0.0035588355 -0.0129512506  0.0037061064  0.0037061064  0.0035588355  0.0035588355  0.0035588355  0.010558766  0.0037061064\n               [,65]         [,66]        [,67]         [,68]         [,69]         [,70]        [,71]        [,72]         [,73]        [,74]         [,75]\n  [1,] -0.0067572024 -0.0066939523 -0.008769759 -0.0066939523 -0.0067139505 -0.0066939523 -0.008769759 -0.008769759 -0.0066939523 -0.008769759 -0.0067572024\n  [2,]  0.0011656733  0.0014030670 -0.006387956  0.0014030670  0.0013280088",
        "  0.0014030670 -0.006387956 -0.006387956  0.0014030670 -0.006387956  0.0011656733\n  [3,]  0.0011656733  0.0014030670 -0.006387956  0.0014030670  0.0013280088  0.0014030670 -0.006387956 -0.006387956  0.0014030670 -0.006387956  0.0011656733\n  [4,]  0.0011656733  0.0014030670 -0.006387956  0.0014030670  0.0013280088  0.0014030670 -0.006387956 -0.006387956  0.0014030670 -0.006387956  0.0011656733\n  [5,] -0.0141871690  0.0033843792  0.010237038  0.0033843792  0.0034503972  0.0033843792  0.010237038  0.010237038  0.0033843792",
        "  0.010237038 -0.0141871690\n  [6,] -0.0141871690  0.0033843792  0.010237038  0.0033843792  0.0034503972  0.0033843792  0.010237038  0.010237038  0.0033843792  0.010237038 -0.0141871690\n  [7,] -0.0141871690  0.0033843792  0.010237038  0.0033843792  0.0034503972  0.0033843792  0.010237038  0.010237038  0.0033843792  0.010237038 -0.0141871690\n  [8,]  0.0037061064 -0.0129512506  0.010558766 -0.0129512506  0.0035588355 -0.0129512506  0.010558766  0.010558766 -0.0129512506  0.010558766  0.0037061064\n               [,76]",
        "         [,77]         [,78]         [,79]         [,80]         [,81]        [,82]         [,83]         [,84]         [,85]\n  [1,] -0.0067139505 -0.0066939523 -0.0066939523 -0.0067139505 -0.0067572024 -0.0067139505 -0.008769759 -0.0067139505 -0.0067572024 -0.0067572024\n  [2,]  0.0013280088  0.0014030670  0.0014030670  0.0013280088  0.0011656733  0.0013280088 -0.006387956  0.0013280088  0.0011656733  0.0011656733\n  [3,]  0.0013280088  0.0014030670  0.0014030670  0.0013280088  0.0011656733  0.0013280088 -0.006387956",
        "  0.0013280088  0.0011656733  0.0011656733\n  [4,]  0.0013280088  0.0014030670  0.0014030670  0.0013280088  0.0011656733  0.0013280088 -0.006387956  0.0013280088  0.0011656733  0.0011656733\n  [5,]  0.0034503972  0.0033843792  0.0033843792  0.0034503972 -0.0141871690  0.0034503972  0.010237038  0.0034503972 -0.0141871690 -0.0141871690\n  [6,]  0.0034503972  0.0033843792  0.0033843792  0.0034503972 -0.0141871690  0.0034503972  0.010237038  0.0034503972 -0.0141871690 -0.0141871690\n  [7,]  0.0034503972  0.0033843792",
        "  0.0033843792  0.0034503972 -0.0141871690  0.0034503972  0.010237038  0.0034503972 -0.0141871690 -0.0141871690\n  [8,]  0.0035588355 -0.0129512506 -0.0129512506  0.0035588355  0.0037061064  0.0035588355  0.010558766  0.0035588355  0.0037061064  0.0037061064\n               [,86]         [,87]        [,88]         [,89]         [,90]         [,91]        [,92]         [,93]        [,94]         [,95]         [,96]\n  [1,] -0.0067139505 -0.0066939523 -0.008769759 -0.0067572024 -0.0066939523 -0.0067139505 -0.008769759",
        " -0.0067139505 -0.008769759 -0.0067572024 -0.0067139505\n  [2,]  0.0013280088  0.0014030670 -0.006387956  0.0011656733  0.0014030670  0.0013280088 -0.006387956  0.0013280088 -0.006387956  0.0011656733  0.0013280088\n  [3,]  0.0013280088  0.0014030670 -0.006387956  0.0011656733  0.0014030670  0.0013280088 -0.006387956  0.0013280088 -0.006387956  0.0011656733  0.0013280088\n  [4,]  0.0013280088  0.0014030670 -0.006387956  0.0011656733  0.0014030670  0.0013280088 -0.006387956  0.0013280088 -0.006387956  0.0011656733",
        "  0.0013280088\n  [5,]  0.0034503972  0.0033843792  0.010237038 -0.0141871690  0.0033843792  0.0034503972  0.010237038  0.0034503972  0.010237038 -0.0141871690  0.0034503972\n  [6,]  0.0034503972  0.0033843792  0.010237038 -0.0141871690  0.0033843792  0.0034503972  0.010237038  0.0034503972  0.010237038 -0.0141871690  0.0034503972\n  [7,]  0.0034503972  0.0033843792  0.010237038 -0.0141871690  0.0033843792  0.0034503972  0.010237038  0.0034503972  0.010237038 -0.0141871690  0.0034503972\n  [8,]  0.0035588355 -0.0129512506",
        "  0.010558766  0.0037061064 -0.0129512506  0.0035588355  0.010558766  0.0035588355  0.010558766  0.0037061064  0.0035588355\n               [,97]         [,98]         [,99]        [,100]        [,101]        [,102]        [,103]       [,104]        [,105]        [,106]\n  [1,] -0.0067572024 -0.0066939523 -0.0066939523 -0.0067139505 -0.0067572024 -0.0066939523 -0.0067572024 -0.008769759 -0.0067572024 -0.0067572024\n  [2,]  0.0011656733  0.0014030670  0.0014030670  0.0013280088  0.0011656733  0.0014030670  0.0011656733",
        " -0.006387956  0.0011656733  0.0011656733\n  [3,]  0.0011656733  0.0014030670  0.0014030670  0.0013280088  0.0011656733  0.0014030670  0.0011656733 -0.006387956  0.0011656733  0.0011656733\n  [4,]  0.0011656733  0.0014030670  0.0014030670  0.0013280088  0.0011656733  0.0014030670  0.0011656733 -0.006387956  0.0011656733  0.0011656733\n  [5,] -0.0141871690  0.0033843792  0.0033843792  0.0034503972 -0.0141871690  0.0033843792 -0.0141871690  0.010237038 -0.0141871690 -0.0141871690\n  [6,] -0.0141871690  0.0033843792",
        "  0.0033843792  0.0034503972 -0.0141871690  0.0033843792 -0.0141871690  0.010237038 -0.0141871690 -0.0141871690\n  [7,] -0.0141871690  0.0033843792  0.0033843792  0.0034503972 -0.0141871690  0.0033843792 -0.0141871690  0.010237038 -0.0141871690 -0.0141871690\n  [8,]  0.0037061064 -0.0129512506 -0.0129512506  0.0035588355  0.0037061064 -0.0129512506  0.0037061064  0.010558766  0.0037061064  0.0037061064\n              [,107]        [,108]        [,109]       [,110]        [,111]        [,112]        [,113]\n  [1,]",
        " -0.0067572024 -0.0067139505 -0.0067139505 -0.008769759 -0.0066939523 -0.0066939523 -0.0067139505\n  [2,]  0.0011656733  0.0013280088  0.0013280088 -0.006387956  0.0014030670  0.0014030670  0.0013280088\n  [3,]  0.0011656733  0.0013280088  0.0013280088 -0.006387956  0.0014030670  0.0014030670  0.0013280088\n  [4,]  0.0011656733  0.0013280088  0.0013280088 -0.006387956  0.0014030670  0.0014030670  0.0013280088\n  [5,] -0.0141871690  0.0034503972  0.0034503972  0.010237038  0.0033843792  0.0033843792  0.0034503972",
        "\n  [6,] -0.0141871690  0.0034503972  0.0034503972  0.010237038  0.0033843792  0.0033843792  0.0034503972\n  [7,] -0.0141871690  0.0034503972  0.0034503972  0.010237038  0.0033843792  0.0033843792  0.0034503972\n  [8,]  0.0037061064  0.0035588355  0.0035588355  0.010558766 -0.0129512506 -0.0129512506  0.0035588355\n [ reached getOption(\"max.print\") -- omitted 105 rows ]\n\n$Aqeps\n[1] 200.01\n\n$Bqeps\n[1] 1778.053\n\n$Aqu\n[1] 50.01\n\n$Bqu\n[1] 35.37206\n\n\nRestarting R session...\n\n",
        "> ",
        "library(designr)",
        "> ",
        "library(varapproxr)",
        "> ",
        "library(lme4)",
        "Loading required package: Matrix\n",
        "> ",
        "library(brms)",
        "Loading required package: Rcpp\n",
        "Loading 'brms' package (version 2.15.0). Useful instructions\ncan be found by typing help('brms'). A more detailed introduction\nto the package is available through vignette('brms_overview').\n",
        "\nAttaching package: ‘brms’\n\n",
        "The following object is masked from ‘package:lme4’:\n\n    ngrps\n\n",
        "The following object is masked from ‘package:stats’:\n\n    ar\n\n",
        "> ",
        "",
        "> ",
        "make_design <- function(zero_sum = FALSE) {",
        "+ ",
        "  Xt  <- kronecker(diag(1, 3), rep(1, 4))",
        "+ ",
        "  Xxt <- diag(1, 12)",
        "+ ",
        "  # Constrain to be equal at baseline and sum to zero at each post-randomisation time point",
        "+ ",
        "  if(zero_sum) {",
        "+ ",
        "    C <- eigen(diag(1, 4) - 1/4)$vectors[, 1:3]",
        "+ ",
        "  } else {",
        "+ ",
        "    C <- contr.treatment(4)",
        "+ ",
        "  }",
        "+ ",
        "  XC  <- cbind(1, rbind(0, cbind(Xt, kronecker(diag(1, 3), C))))",
        "+ ",
        "  colnames(XC) <- c(\"t0\", \"t1\", \"t2\", \"t3\", \"t1x1\", \"t1x2\", \"t1x3\", \"t2x1\", \"t2x2\", \"t2x3\", \"t3x1\", \"t3x2\", \"t3x3\")",
        "+ ",
        "  rownames(XC) <- c(\"t0\", \"t1x0\", \"t1x1\", \"t1x2\", \"t1x3\", \"t2x0\", \"t2x1\", \"t2x2\", \"t2x3\", \"t3x0\", \"t3x1\", \"t3x2\", \"t3x3\")",
        "+ ",
        "  return(XC)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "x <- factor(0:3)",
        "> ",
        "t <- factor(1:3)",
        "> ",
        "D <- expand.grid(x = x, t = t)",
        "> ",
        "D <- rbind.data.frame(data.frame(x = 0, t = 0), D)",
        "> ",
        "X <- model.matrix( ~ t + t:x, data = D)",
        "> ",
        "simdat <- tidyr::expand_grid(id = 1:200, D)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "create_subjects <- function(nsubj) {",
        "+ ",
        "  subjects <- data.table(",
        "+ ",
        "    id = 1:nsubj,",
        "+ ",
        "    rt = 1:nsubj",
        "+ ",
        "  )",
        "+ ",
        "  return(subjects)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "sim_subject_data <- function(X, p, beta, sigma_e, sigma_u) {",
        "+ ",
        "  x <- sample.int(length(p), 1, prob = p) - 1",
        "+ ",
        "  X_j <- X[c(TRUE, grepl(paste0(\"x\", x), rownames(X))[-1]), ]",
        "+ ",
        "  b_j <- rnorm(1, 0, sigma_u)",
        "+ ",
        "  y_j <- b_j + drop(X_j %*% beta) + rnorm(nrow(X_j), 0, sigma_e)",
        "+ ",
        "  data.table::data.table(x = x, b = b_j, y = y_j)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "simdat <-  simdat %>% left_join(simdatx, by = \"id\") %>%",
        "+ ",
        "  mutate(grp = x,",
        "+ ",
        "         x = if_else(t == 0, 0, x)) %>%",
        "+ ",
        "  mutate(t = factor(t),",
        "+ ",
        "         x = factor(x))",
        "Error in simdat %>% left_join(simdatx, by = \"id\") %>% mutate(grp = x,  : \n  could not find function \"%>%\"\n",
        "> ",
        "model.matrix( ~ 0 + t + t:x, data = simdat)",
        "     t0 t1 t2 t3 t0:x1 t1:x1 t2:x1 t3:x1 t0:x2 t1:x2 t2:x2 t3:x2 t0:x3 t1:x3 t2:x3 t3:x3\n1     1  0  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n2     0  1  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n3     0  1  0  0     0     1     0     0     0     0     0     0     0     0     0     0\n4     0  1  0  0     0     0     0     0     0     1     0     0     0     0     0     0\n5     0  1  0  0     0     0     0     0     0     0     0     0     0",
        "     1     0     0\n6     0  0  1  0     0     0     0     0     0     0     0     0     0     0     0     0\n7     0  0  1  0     0     0     1     0     0     0     0     0     0     0     0     0\n8     0  0  1  0     0     0     0     0     0     0     1     0     0     0     0     0\n9     0  0  1  0     0     0     0     0     0     0     0     0     0     0     1     0\n10    0  0  0  1     0     0     0     0     0     0     0     0     0     0     0     0\n11    0  0  0  1     0     0     0     1     0     0",
        "     0     0     0     0     0     0\n12    0  0  0  1     0     0     0     0     0     0     0     1     0     0     0     0\n13    0  0  0  1     0     0     0     0     0     0     0     0     0     0     0     1\n14    1  0  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n15    0  1  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n16    0  1  0  0     0     1     0     0     0     0     0     0     0     0     0     0\n17    0  1  0  0     0     0     0",
        "     0     0     1     0     0     0     0     0     0\n18    0  1  0  0     0     0     0     0     0     0     0     0     0     1     0     0\n19    0  0  1  0     0     0     0     0     0     0     0     0     0     0     0     0\n20    0  0  1  0     0     0     1     0     0     0     0     0     0     0     0     0\n21    0  0  1  0     0     0     0     0     0     0     1     0     0     0     0     0\n22    0  0  1  0     0     0     0     0     0     0     0     0     0     0     1     0\n23    0  0  0",
        "  1     0     0     0     0     0     0     0     0     0     0     0     0\n24    0  0  0  1     0     0     0     1     0     0     0     0     0     0     0     0\n25    0  0  0  1     0     0     0     0     0     0     0     1     0     0     0     0\n26    0  0  0  1     0     0     0     0     0     0     0     0     0     0     0     1\n27    1  0  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n28    0  1  0  0     0     0     0     0     0     0     0     0     0     0     0",
        "     0\n29    0  1  0  0     0     1     0     0     0     0     0     0     0     0     0     0\n30    0  1  0  0     0     0     0     0     0     1     0     0     0     0     0     0\n31    0  1  0  0     0     0     0     0     0     0     0     0     0     1     0     0\n32    0  0  1  0     0     0     0     0     0     0     0     0     0     0     0     0\n33    0  0  1  0     0     0     1     0     0     0     0     0     0     0     0     0\n34    0  0  1  0     0     0     0     0     0     0     1     0",
        "     0     0     0     0\n35    0  0  1  0     0     0     0     0     0     0     0     0     0     0     1     0\n36    0  0  0  1     0     0     0     0     0     0     0     0     0     0     0     0\n37    0  0  0  1     0     0     0     1     0     0     0     0     0     0     0     0\n38    0  0  0  1     0     0     0     0     0     0     0     1     0     0     0     0\n39    0  0  0  1     0     0     0     0     0     0     0     0     0     0     0     1\n40    1  0  0  0     0     0     0     0     0",
        "     0     0     0     0     0     0     0\n41    0  1  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n42    0  1  0  0     0     1     0     0     0     0     0     0     0     0     0     0\n43    0  1  0  0     0     0     0     0     0     1     0     0     0     0     0     0\n44    0  1  0  0     0     0     0     0     0     0     0     0     0     1     0     0\n45    0  0  1  0     0     0     0     0     0     0     0     0     0     0     0     0\n46    0  0  1  0     0     0",
        "     1     0     0     0     0     0     0     0     0     0\n47    0  0  1  0     0     0     0     0     0     0     1     0     0     0     0     0\n48    0  0  1  0     0     0     0     0     0     0     0     0     0     0     1     0\n49    0  0  0  1     0     0     0     0     0     0     0     0     0     0     0     0\n50    0  0  0  1     0     0     0     1     0     0     0     0     0     0     0     0\n51    0  0  0  1     0     0     0     0     0     0     0     1     0     0     0     0\n52    0",
        "  0  0  1     0     0     0     0     0     0     0     0     0     0     0     1\n53    1  0  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n54    0  1  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n55    0  1  0  0     0     1     0     0     0     0     0     0     0     0     0     0\n56    0  1  0  0     0     0     0     0     0     1     0     0     0     0     0     0\n57    0  1  0  0     0     0     0     0     0     0     0     0     0     1",
        "     0     0\n58    0  0  1  0     0     0     0     0     0     0     0     0     0     0     0     0\n59    0  0  1  0     0     0     1     0     0     0     0     0     0     0     0     0\n60    0  0  1  0     0     0     0     0     0     0     1     0     0     0     0     0\n61    0  0  1  0     0     0     0     0     0     0     0     0     0     0     1     0\n62    0  0  0  1     0     0     0     0     0     0     0     0     0     0     0     0\n [ reached getOption(\"max.print\") -- omitted 2538 rows ]\n",
        "attr(,\"assign\")\n [1] 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2\nattr(,\"contrasts\")\nattr(,\"contrasts\")$t\n[1] \"contr.treatment\"\n\nattr(,\"contrasts\")$x\n[1] \"contr.treatment\"\n\n",
        "> ",
        "",
        "> ",
        "nsim <- 10",
        "> ",
        "",
        "> ",
        "cbind.data.frame(simdat, rtsimmat) %>%",
        "+ ",
        "  pivot_longer(`1`:`10`) %>%",
        "+ ",
        "  filter(id %in% 1:10) %>%",
        "+ ",
        "  ggplot(., aes(t, value, group = paste0(id, name))) + facet_wrap( ~ grp) + geom_line()",
        "Error in cbind.data.frame(simdat, rtsimmat) %>% pivot_longer(`1`:`10`) %>%  : \n  could not find function \"%>%\"\n",
        "> ",
        "",
        "> ",
        "simulate_data <- function(",
        "+ ",
        "  nsims = 50,",
        "+ ",
        "  nsubj = 200,",
        "+ ",
        "  beta = c(0, 2, 4, 6, 0, -3, -3, -3, 0, 3, 3, 3, 0, 0, 0, 0),",
        "+ ",
        "  sigma_e = 3,",
        "+ ",
        "  sigma_u = 1",
        "+ ",
        ") {",
        "+ ",
        "  simdat <- expand_grid(id = 1:nsubj, t = 0:3, x = 0:3) %>%",
        "+ ",
        "    mutate(",
        "+ ",
        "      trt = x,",
        "+ ",
        "      x = if_else(t == 0, 0L, x),",
        "+ ",
        "      time = case_when(t == 0 ~ 0,",
        "+ ",
        "                       t == 1 ~ 4,",
        "+ ",
        "                       t == 2 ~ 8,",
        "+ ",
        "                       t == 3 ~ 12)) %>%",
        "+ ",
        "    mutate(t = factor(t), x = factor(x)) %>%",
        "+ ",
        "    unique()",
        "+ ",
        "  rtsimmat <-matrix(NA, nrow(simdat), nsims)",
        "+ ",
        "  colnames(rtsimmat) <- paste0(\"s\", 1:nsims)",
        "+ ",
        "  for(i in 1:nsims) {",
        "+ ",
        "    rtsimmat[, i] <- simLMM(",
        "+ ",
        "      ~ 0 + t + t:x + (1 | id),",
        "+ ",
        "      data = simdat,",
        "+ ",
        "      Fixef = c(0, 2, 4, 6, 0, -3, -3, -3, 0, 3, 3, 3, 0, 0, 0, 0),",
        "+ ",
        "      VC_sd = list(1, 3),",
        "+ ",
        "      empirical = FALSE,",
        "+ ",
        "      verbose = FALSE",
        "+ ",
        "    )",
        "+ ",
        "  }",
        "+ ",
        "  return(bind_cols(simdat, as_tibble(rtsimmat)))",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "simulate_data_dt <- function(",
        "+ ",
        "  nsims = 50,",
        "+ ",
        "  nsubj = 200,",
        "+ ",
        "  beta = c(0, 2, 4, 6, 0, -3, -3, -3, 0, 3, 3, 3, 0, 0, 0, 0),",
        "+ ",
        "  sigma_e = 3,",
        "+ ",
        "  sigma_u = 1",
        "+ ",
        ") {",
        "+ ",
        "  simdat <- data.table::CJ(",
        "+ ",
        "    id = 1:nsubj,",
        "+ ",
        "    t = 0:3,",
        "+ ",
        "    x = 0:3)[, .(",
        "+ ",
        "      id,",
        "+ ",
        "      trt = x,",
        "+ ",
        "      x = factor(ifelse(t == 0, 0L, x)),",
        "+ ",
        "      time = data.table::fcase(t == 0, 0, t == 1, 4, t == 2, 8, t == 3, 12),",
        "+ ",
        "      t = factor(t)",
        "+ ",
        "    )]",
        "+ ",
        "  rtsimmat <-matrix(NA, nrow(simdat), nsims)",
        "+ ",
        "  colnames(rtsimmat) <- paste0(\"s\", 1:nsims)",
        "+ ",
        "  for(i in 1:nsims) {",
        "+ ",
        "    rtsimmat[, i] <- simLMM(",
        "+ ",
        "      ~ 0 + t + t:x + (1 | id),",
        "+ ",
        "      data = simdat,",
        "+ ",
        "      Fixef = c(0, 2, 4, 6, 0, -3, -3, -3, 0, 3, 3, 3, 0, 0, 0, 0),",
        "+ ",
        "      VC_sd = list(1, 3),",
        "+ ",
        "      empirical = FALSE,",
        "+ ",
        "      verbose = FALSE",
        "+ ",
        "    )",
        "+ ",
        "  }",
        "+ ",
        "  return(cbind(simdat, rtsimmat))",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "N <- 100",
        "> ",
        "res <- simulate_data_dt()",
        "> ",
        "x <- findInterval(runif(N), c(0, 0.25, 0.5, 0.75)) - 1",
        "> ",
        "simdatx <- data.table::data.table(id = 1:N, trt = x)",
        "> ",
        "ex <- res[simdatx, on = .(id, trt)]",
        "> ",
        "ex <- left_join(simdatx, res, by = c(\"id\", \"trt\"))",
        "Error in left_join(simdatx, res, by = c(\"id\", \"trt\")) : \n  could not find function \"left_join\"\n",
        "> ",
        "",
        "> ",
        "ggplot(ex, aes(t, s2, group = id)) + facet_wrap( ~ trt) + geom_line()",
        "Error in ggplot(ex, aes(t, s2, group = id)) : \n  could not find function \"ggplot\"\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "system.time(",
        "+ ",
        "fit_vb <- vb_lmm_randint(",
        "+ ",
        "  model.matrix( ~ t + t:x, data = ex)[, -c(5, 9, 13)],",
        "+ ",
        "  model.matrix( ~ 0 + factor(id), data = ex)[,],",
        "+ ",
        "  ex[, s1],",
        "+ ",
        "  mu_beta = rep(0, 13),",
        "+ ",
        "  sigma_beta = diag(c(10^2, rep(1, 12))),",
        "+ ",
        "  mu = rep(0, N + 13),",
        "+ ",
        "  sigma = diag(1, N + 13),",
        "+ ",
        "  Aeps = 1e-2, Beps = 1e-2, Au = 1e-2, Bu = 1e-2",
        "+ ",
        ")",
        "+ ",
        ")",
        "   user  system elapsed \n  0.202   0.008   0.102 \n",
        "> ",
        "library(designr)",
        "> ",
        "library(varapproxr)",
        "> ",
        "library(lme4)",
        "> ",
        "library(brms)",
        "> ",
        "",
        "> ",
        "make_design <- function(zero_sum = FALSE) {",
        "+ ",
        "  Xt  <- kronecker(diag(1, 3), rep(1, 4))",
        "+ ",
        "  Xxt <- diag(1, 12)",
        "+ ",
        "  # Constrain to be equal at baseline and sum to zero at each post-randomisation time point",
        "+ ",
        "  if(zero_sum) {",
        "+ ",
        "    C <- eigen(diag(1, 4) - 1/4)$vectors[, 1:3]",
        "+ ",
        "  } else {",
        "+ ",
        "    C <- contr.treatment(4)",
        "+ ",
        "  }",
        "+ ",
        "  XC  <- cbind(1, rbind(0, cbind(Xt, kronecker(diag(1, 3), C))))",
        "+ ",
        "  colnames(XC) <- c(\"t0\", \"t1\", \"t2\", \"t3\", \"t1x1\", \"t1x2\", \"t1x3\", \"t2x1\", \"t2x2\", \"t2x3\", \"t3x1\", \"t3x2\", \"t3x3\")",
        "+ ",
        "  rownames(XC) <- c(\"t0\", \"t1x0\", \"t1x1\", \"t1x2\", \"t1x3\", \"t2x0\", \"t2x1\", \"t2x2\", \"t2x3\", \"t3x0\", \"t3x1\", \"t3x2\", \"t3x3\")",
        "+ ",
        "  return(XC)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "x <- factor(0:3)",
        "> ",
        "t <- factor(1:3)",
        "> ",
        "D <- expand.grid(x = x, t = t)",
        "> ",
        "D <- rbind.data.frame(data.frame(x = 0, t = 0), D)",
        "> ",
        "X <- model.matrix( ~ t + t:x, data = D)",
        "> ",
        "simdat <- tidyr::expand_grid(id = 1:200, D)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "create_subjects <- function(nsubj) {",
        "+ ",
        "  subjects <- data.table(",
        "+ ",
        "    id = 1:nsubj,",
        "+ ",
        "    rt = 1:nsubj",
        "+ ",
        "  )",
        "+ ",
        "  return(subjects)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "sim_subject_data <- function(X, p, beta, sigma_e, sigma_u) {",
        "+ ",
        "  x <- sample.int(length(p), 1, prob = p) - 1",
        "+ ",
        "  X_j <- X[c(TRUE, grepl(paste0(\"x\", x), rownames(X))[-1]), ]",
        "+ ",
        "  b_j <- rnorm(1, 0, sigma_u)",
        "+ ",
        "  y_j <- b_j + drop(X_j %*% beta) + rnorm(nrow(X_j), 0, sigma_e)",
        "+ ",
        "  data.table::data.table(x = x, b = b_j, y = y_j)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "simdat <-  simdat %>% left_join(simdatx, by = \"id\") %>%",
        "+ ",
        "  mutate(grp = x,",
        "+ ",
        "         x = if_else(t == 0, 0, x)) %>%",
        "+ ",
        "  mutate(t = factor(t),",
        "+ ",
        "         x = factor(x))",
        "Error in simdat %>% left_join(simdatx, by = \"id\") %>% mutate(grp = x,  : \n  could not find function \"%>%\"\n",
        "> ",
        "model.matrix( ~ 0 + t + t:x, data = simdat)",
        "     t0 t1 t2 t3 t0:x1 t1:x1 t2:x1 t3:x1 t0:x2 t1:x2 t2:x2 t3:x2 t0:x3 t1:x3 t2:x3 t3:x3\n1     1  0  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n2     0  1  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n3     0  1  0  0     0     1     0     0     0     0     0     0     0     0     0     0\n4     0  1  0  0     0     0     0     0     0     1     0     0     0     0     0     0\n5     0  1  0  0     0     0     0     0     0     0     0     0     0",
        "     1     0     0\n6     0  0  1  0     0     0     0     0     0     0     0     0     0     0     0     0\n7     0  0  1  0     0     0     1     0     0     0     0     0     0     0     0     0\n8     0  0  1  0     0     0     0     0     0     0     1     0     0     0     0     0\n9     0  0  1  0     0     0     0     0     0     0     0     0     0     0     1     0\n10    0  0  0  1     0     0     0     0     0     0     0     0     0     0     0     0\n11    0  0  0  1     0     0     0     1     0     0",
        "     0     0     0     0     0     0\n12    0  0  0  1     0     0     0     0     0     0     0     1     0     0     0     0\n13    0  0  0  1     0     0     0     0     0     0     0     0     0     0     0     1\n14    1  0  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n15    0  1  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n16    0  1  0  0     0     1     0     0     0     0     0     0     0     0     0     0\n17    0  1  0  0     0     0     0",
        "     0     0     1     0     0     0     0     0     0\n18    0  1  0  0     0     0     0     0     0     0     0     0     0     1     0     0\n19    0  0  1  0     0     0     0     0     0     0     0     0     0     0     0     0\n20    0  0  1  0     0     0     1     0     0     0     0     0     0     0     0     0\n21    0  0  1  0     0     0     0     0     0     0     1     0     0     0     0     0\n22    0  0  1  0     0     0     0     0     0     0     0     0     0     0     1     0\n23    0  0  0",
        "  1     0     0     0     0     0     0     0     0     0     0     0     0\n24    0  0  0  1     0     0     0     1     0     0     0     0     0     0     0     0\n25    0  0  0  1     0     0     0     0     0     0     0     1     0     0     0     0\n26    0  0  0  1     0     0     0     0     0     0     0     0     0     0     0     1\n27    1  0  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n28    0  1  0  0     0     0     0     0     0     0     0     0     0     0     0",
        "     0\n29    0  1  0  0     0     1     0     0     0     0     0     0     0     0     0     0\n30    0  1  0  0     0     0     0     0     0     1     0     0     0     0     0     0\n31    0  1  0  0     0     0     0     0     0     0     0     0     0     1     0     0\n32    0  0  1  0     0     0     0     0     0     0     0     0     0     0     0     0\n33    0  0  1  0     0     0     1     0     0     0     0     0     0     0     0     0\n34    0  0  1  0     0     0     0     0     0     0     1     0",
        "     0     0     0     0\n35    0  0  1  0     0     0     0     0     0     0     0     0     0     0     1     0\n36    0  0  0  1     0     0     0     0     0     0     0     0     0     0     0     0\n37    0  0  0  1     0     0     0     1     0     0     0     0     0     0     0     0\n38    0  0  0  1     0     0     0     0     0     0     0     1     0     0     0     0\n39    0  0  0  1     0     0     0     0     0     0     0     0     0     0     0     1\n40    1  0  0  0     0     0     0     0     0",
        "     0     0     0     0     0     0     0\n41    0  1  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n42    0  1  0  0     0     1     0     0     0     0     0     0     0     0     0     0\n43    0  1  0  0     0     0     0     0     0     1     0     0     0     0     0     0\n44    0  1  0  0     0     0     0     0     0     0     0     0     0     1     0     0\n45    0  0  1  0     0     0     0     0     0     0     0     0     0     0     0     0\n46    0  0  1  0     0     0",
        "     1     0     0     0     0     0     0     0     0     0\n47    0  0  1  0     0     0     0     0     0     0     1     0     0     0     0     0\n48    0  0  1  0     0     0     0     0     0     0     0     0     0     0     1     0\n49    0  0  0  1     0     0     0     0     0     0     0     0     0     0     0     0\n50    0  0  0  1     0     0     0     1     0     0     0     0     0     0     0     0\n51    0  0  0  1     0     0     0     0     0     0     0     1     0     0     0     0\n52    0",
        "  0  0  1     0     0     0     0     0     0     0     0     0     0     0     1\n53    1  0  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n54    0  1  0  0     0     0     0     0     0     0     0     0     0     0     0     0\n55    0  1  0  0     0     1     0     0     0     0     0     0     0     0     0     0\n56    0  1  0  0     0     0     0     0     0     1     0     0     0     0     0     0\n57    0  1  0  0     0     0     0     0     0     0     0     0     0     1",
        "     0     0\n58    0  0  1  0     0     0     0     0     0     0     0     0     0     0     0     0\n59    0  0  1  0     0     0     1     0     0     0     0     0     0     0     0     0\n60    0  0  1  0     0     0     0     0     0     0     1     0     0     0     0     0\n61    0  0  1  0     0     0     0     0     0     0     0     0     0     0     1     0\n62    0  0  0  1     0     0     0     0     0     0     0     0     0     0     0     0\n [ reached getOption(\"max.print\") -- omitted 2538 rows ]\n",
        "attr(,\"assign\")\n [1] 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2\nattr(,\"contrasts\")\nattr(,\"contrasts\")$t\n[1] \"contr.treatment\"\n\nattr(,\"contrasts\")$x\n[1] \"contr.treatment\"\n\n",
        "> ",
        "",
        "> ",
        "nsim <- 10",
        "> ",
        "",
        "> ",
        "cbind.data.frame(simdat, rtsimmat) %>%",
        "+ ",
        "  pivot_longer(`1`:`10`) %>%",
        "+ ",
        "  filter(id %in% 1:10) %>%",
        "+ ",
        "  ggplot(., aes(t, value, group = paste0(id, name))) + facet_wrap( ~ grp) + geom_line()",
        "Error in cbind.data.frame(simdat, rtsimmat) %>% pivot_longer(`1`:`10`) %>%  : \n  could not find function \"%>%\"\n",
        "> ",
        "",
        "> ",
        "simulate_data <- function(",
        "+ ",
        "  nsims = 50,",
        "+ ",
        "  nsubj = 200,",
        "+ ",
        "  beta = c(0, 2, 4, 6, 0, -3, -3, -3, 0, 3, 3, 3, 0, 0, 0, 0),",
        "+ ",
        "  sigma_e = 3,",
        "+ ",
        "  sigma_u = 1",
        "+ ",
        ") {",
        "+ ",
        "  simdat <- expand_grid(id = 1:nsubj, t = 0:3, x = 0:3) %>%",
        "+ ",
        "    mutate(",
        "+ ",
        "      trt = x,",
        "+ ",
        "      x = if_else(t == 0, 0L, x),",
        "+ ",
        "      time = case_when(t == 0 ~ 0,",
        "+ ",
        "                       t == 1 ~ 4,",
        "+ ",
        "                       t == 2 ~ 8,",
        "+ ",
        "                       t == 3 ~ 12)) %>%",
        "+ ",
        "    mutate(t = factor(t), x = factor(x)) %>%",
        "+ ",
        "    unique()",
        "+ ",
        "  rtsimmat <-matrix(NA, nrow(simdat), nsims)",
        "+ ",
        "  colnames(rtsimmat) <- paste0(\"s\", 1:nsims)",
        "+ ",
        "  for(i in 1:nsims) {",
        "+ ",
        "    rtsimmat[, i] <- simLMM(",
        "+ ",
        "      ~ 0 + t + t:x + (1 | id),",
        "+ ",
        "      data = simdat,",
        "+ ",
        "      Fixef = c(0, 2, 4, 6, 0, -3, -3, -3, 0, 3, 3, 3, 0, 0, 0, 0),",
        "+ ",
        "      VC_sd = list(1, 3),",
        "+ ",
        "      empirical = FALSE,",
        "+ ",
        "      verbose = FALSE",
        "+ ",
        "    )",
        "+ ",
        "  }",
        "+ ",
        "  return(bind_cols(simdat, as_tibble(rtsimmat)))",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "simulate_data_dt <- function(",
        "+ ",
        "  nsims = 50,",
        "+ ",
        "  nsubj = 200,",
        "+ ",
        "  beta = c(0, 2, 4, 6, 0, -3, -3, -3, 0, 3, 3, 3, 0, 0, 0, 0),",
        "+ ",
        "  sigma_e = 3,",
        "+ ",
        "  sigma_u = 1",
        "+ ",
        ") {",
        "+ ",
        "  simdat <- data.table::CJ(",
        "+ ",
        "    id = 1:nsubj,",
        "+ ",
        "    t = 0:3,",
        "+ ",
        "    x = 0:3)[, .(",
        "+ ",
        "      id,",
        "+ ",
        "      trt = x,",
        "+ ",
        "      x = factor(ifelse(t == 0, 0L, x)),",
        "+ ",
        "      time = data.table::fcase(t == 0, 0, t == 1, 4, t == 2, 8, t == 3, 12),",
        "+ ",
        "      t = factor(t)",
        "+ ",
        "    )]",
        "+ ",
        "  rtsimmat <-matrix(NA, nrow(simdat), nsims)",
        "+ ",
        "  colnames(rtsimmat) <- paste0(\"s\", 1:nsims)",
        "+ ",
        "  for(i in 1:nsims) {",
        "+ ",
        "    rtsimmat[, i] <- simLMM(",
        "+ ",
        "      ~ 0 + t + t:x + (1 | id),",
        "+ ",
        "      data = simdat,",
        "+ ",
        "      Fixef = c(0, 2, 4, 6, 0, -3, -3, -3, 0, 3, 3, 3, 0, 0, 0, 0),",
        "+ ",
        "      VC_sd = list(1, 3),",
        "+ ",
        "      empirical = FALSE,",
        "+ ",
        "      verbose = FALSE",
        "+ ",
        "    )",
        "+ ",
        "  }",
        "+ ",
        "  return(cbind(simdat, rtsimmat))",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "N <- 100",
        "> ",
        "res <- simulate_data_dt()",
        "> ",
        "x <- findInterval(runif(N), c(0, 0.25, 0.5, 0.75)) - 1",
        "> ",
        "simdatx <- data.table::data.table(id = 1:N, trt = x)",
        "> ",
        "ex <- res[simdatx, on = .(id, trt)]",
        "> ",
        "",
        "> ",
        "system.time(",
        "+ ",
        "fit_vb <- vb_lmm_randint(",
        "+ ",
        "  model.matrix( ~ t + t:x, data = ex)[, -c(5, 9, 13)],",
        "+ ",
        "  model.matrix( ~ 0 + factor(id), data = ex)[,],",
        "+ ",
        "  ex[, s1],",
        "+ ",
        "  mu_beta = rep(0, 13),",
        "+ ",
        "  sigma_beta = diag(c(10^2, rep(1, 12))),",
        "+ ",
        "  mu = rep(0, N + 13),",
        "+ ",
        "  sigma = diag(1, N + 13),",
        "+ ",
        "  Aeps = 1e-2, Beps = 1e-2, Au = 1e-2, Bu = 1e-2",
        "+ ",
        ")",
        "+ ",
        ")",
        "   user  system elapsed \n  0.180   0.001   0.093 \n",
        "> ",
        "system.time(",
        "+ ",
        "fit_vb <- vb_lmm_randint(",
        "+ ",
        "  model.matrix( ~ t + t:x, data = ex)[, -c(5, 9, 13)],",
        "+ ",
        "  model.matrix( ~ 0 + factor(id), data = ex)[,],",
        "+ ",
        "  ex[, s1],",
        "+ ",
        "  mu_beta = rep(0, 13),",
        "+ ",
        "  sigma_beta = diag(c(10^2, rep(1, 12))),",
        "+ ",
        "  mu = rep(0, N + 13),",
        "+ ",
        "  sigma = diag(1, N + 13),",
        "+ ",
        "  Aeps = 1e-2, Beps = 1e-2, Au = 1e-2, Bu = 1e-2",
        "+ ",
        ")",
        "+ ",
        ")",
        "   user  system elapsed \n  0.091   0.000   0.092 \n",
        "> ",
        "fit_lmer <- lme4::lmer(s1 ~ t + t:x + (1 | id), data = ex)",
        "fixed-effect model matrix is rank deficient so dropping 3 columns / coefficients\n",
        "> ",
        "system.time(",
        "+ ",
        "fit_vb <- vb_lmm_randint(",
        "+ ",
        "  model.matrix( ~ t + t:x, data = ex)[, -c(5, 9, 13)],",
        "+ ",
        "  model.matrix( ~ 0 + factor(id), data = ex)[,],",
        "+ ",
        "  ex[, s1],",
        "+ ",
        "  mu_beta = rep(0, 13),",
        "+ ",
        "  sigma_beta = diag(c(10^2, rep(1, 12))),",
        "+ ",
        "  mu = rep(0, N + 13),",
        "+ ",
        "  sigma = diag(1, N + 13),",
        "+ ",
        "  Aeps = 1e-2, Beps = 1e-2, Au = 1e-2, Bu = 1e-2",
        "+ ",
        ")",
        "+ ",
        ")",
        "   user  system elapsed \n  0.087   0.000   0.087 \n",
        "> ",
        "system.time(",
        "+ ",
        "fit_vb <- vb_lmm_randint(",
        "+ ",
        "  model.matrix( ~ t + t:x, data = ex)[, -c(5, 9, 13)],",
        "+ ",
        "  model.matrix( ~ 0 + factor(id), data = ex)[,],",
        "+ ",
        "  ex[, s1],",
        "+ ",
        "  mu_beta = rep(0, 13),",
        "+ ",
        "  sigma_beta = diag(c(10^2, rep(1, 12))),",
        "+ ",
        "  mu = rep(0, N + 13),",
        "+ ",
        "  sigma = diag(1, N + 13),",
        "+ ",
        "  Aeps = 1e-2, Beps = 1e-2, Au = 1e-2, Bu = 1e-2",
        "+ ",
        ")",
        "+ ",
        ")",
        "   user  system elapsed \n  0.085   0.004   0.089 \n\nRestarting R session...\n\n"
    ]
}